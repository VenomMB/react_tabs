{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","id","className","map","tab","title","classNames","href","onClick","content","App","useState","setTabId","setTitle","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAkB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC/CC,EAAaH,EAAKI,MAAK,qBAAGC,KAAgBJ,MAAkBD,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAC,GACR,IAAQH,EAAcG,EAAdH,GAAII,EAAUD,EAAVC,MAEZ,OACE,oBACEH,UAAWI,IAAW,CACpB,YAAaL,KAAE,OAAKF,QAAL,IAAKA,OAAL,EAAKA,EAAYE,MAElC,UAAQ,MAJV,SAOE,mBACEM,KAAI,WAAMN,GACV,UAAQ,UACRO,QAAS,WACHJ,EAAIH,KAAOJ,GACbC,EAAcM,IALpB,SASGC,KAXEJ,UAmBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAWU,cCvCPb,EAAO,CAClB,CAAEK,GAAI,QAASI,MAAO,QAASI,QAAS,eACxC,CAAER,GAAI,QAASI,MAAO,QAASI,QAAS,eACxC,CAAER,GAAI,QAASI,MAAO,QAASI,QAAS,gBAG7BC,EAAU,WACrB,MAAkCC,mBAASf,EAAK,GAAGK,IAAnD,mBAAOJ,EAAP,KAAsBe,EAAtB,KACA,EAA0BD,mBAAS,SAAnC,mBAAON,EAAP,KAAcQ,EAAd,KAOA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBG,KAGtB,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeA,EACfC,cAdgB,SAACC,GACrBa,EAASb,EAAWE,IACpBY,EAASd,EAAWM,cChBxBS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.20b4c4c6.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Tab } from './types/interface';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: FC<Props> = ({ tabs, selectedTabId, onTabSelected }) => {\n  const currentTab = tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': id === currentTab?.id,\n                })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (tab.id !== selectedTabId) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './components/Tabs/types/interface';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: FC = () => {\n  const [selectedTabId, setTabId] = useState(tabs[0].id);\n  const [title, setTitle] = useState('Tab 1');\n\n  const onTabSelected = (currentTab: Tab) => {\n    setTabId(currentTab.id);\n    setTitle(currentTab.title);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}